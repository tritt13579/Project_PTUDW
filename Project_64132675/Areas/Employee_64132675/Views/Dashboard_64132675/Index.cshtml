@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_LayoutEmployee.cshtml";
}
<style>
    :root {
        --primary-color: #2c3e50;
        --secondary-color: #34495e;
        --accent-color: #f4a730;
        --accent-secondary: #e67e22;
        --text-color-light: #ecf0f1;
        --text-color-dark: #2c3e50;
        --shadow-sm: 0 2px 4px rgba(0,0,0,0.05);
        --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
    }

    .dashboard-container {
        padding: 24px;
        background-color: var(--background-light);
    }

    .dashboard-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        padding: 24px;
        border-radius: 12px;
        margin-bottom: 24px;
        box-shadow: var(--shadow-md);
        color: var(--text-color-light);
    }

    .kpi-card {
        background: white;
        padding: 18px;
        border-radius: 12px;
        box-shadow: var(--shadow-sm);
        height: 100%;
        transition: transform 0.2s;
    }

        .kpi-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

    .kpi-title {
        color: var(--secondary-color);
        font-size: 1rem;
        font-weight: 600;
    }

    .kpi-value {
        color: var(--primary-color);
        font-size: 1.5rem;
        font-weight: 700;
    }

    .kpi-icon {
        color: var(--accent-color);
        font-size: 2.25rem;
        margin-bottom: 12px;
    }

    .chart-container {
        background: white;
        padding: 24px;
        border-radius: 12px;
        margin-bottom: 24px;
        box-shadow: var(--shadow-sm);
        height: 350px;
        position: relative;
    }

    .chart-title {
        color: var(--primary-color);
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 2px solid var(--background-light);
    }

    .date-filter {
        background: rgba(255, 255, 255, 0.1);
        padding: 8px 16px;
        border-radius: 8px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: var(--text-color-light);
    }

        .date-filter:focus {
            outline: none;
            border-color: var(--accent-color);
        }
</style>

<div class="dashboard-container">
    <div class="dashboard-header">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h2 class="mb-0">Bảng Điều Khiển Khách Sạn</h2>
            </div>
            <div class="col-md-6">
                <div class="d-flex justify-content-end">
                    <input type="date" id="startDate" class="date-filter me-2">
                    <input type="date" id="endDate" class="date-filter">
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4 mb-4">
        <div class="col-md-3">
            <div class="kpi-card">
                <i class="fas fa-dollar-sign kpi-icon"></i>
                <div class="kpi-title">Tổng Doanh Thu</div>
                <div class="kpi-value" id="totalRevenue">0 ₫</div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="kpi-card">
                <i class="fas fa-bed kpi-icon"></i>
                <div class="kpi-title">Tỷ Lệ Lấp Đầy</div>
                <div class="kpi-value" id="occupancy">0%</div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="kpi-card">
                <i class="fas fa-concierge-bell kpi-icon"></i>
                <div class="kpi-title">Dịch Vụ Hàng Đầu</div>
                <div class="kpi-value" id="topService">-</div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="kpi-card">
                <i class="fas fa-users kpi-icon"></i>
                <div class="kpi-title">Số Khách Hiện Tại</div>
                <div class="kpi-value" id="currentGuests">0</div>
            </div>
        </div>
    </div>

    <div class="row g-4">
        <div class="col-md-8">
            <div class="chart-container">
                <h3 class="chart-title">Doanh Thu Theo Loại Phòng</h3>
                <canvas id="revenueByRoomChart"></canvas>
            </div>
        </div>
        <div class="col-md-4">
            <div class="chart-container">
                <h3 class="chart-title">Nguồn Đặt Phòng</h3>
                <canvas id="bookingSourcesChart"></canvas>
            </div>
        </div>
        <div class="col-md-12">
            <div class="chart-container">
                <h3 class="chart-title">Công suất phòng</h3>
                <canvas id="occupancyTrendChart"></canvas>
            </div>
        </div>
        <div class="col-md-12">
            <div class="chart-container">
                <h3 class="chart-title">Doanh Thu Dịch Vụ</h3>
                <canvas id="serviceRevenueChart"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        //const chartColors = {
        //    primary: '#2c3e50',
        //    secondary: '#34495e',
        //    accent: '#f4a730',
        //    background: '#f8fafc',
        //    chartColors: [
        //        '#3498db', '#2ecc71', '#e74c3c', '#f1c40f', '#9b59b6',
        //        '#1abc9c', '#e67e22', '#34495e', '#95a5a6', '#16a085'
        //    ]
        //};
        const chartColors = {
            primary: '#2c3e50',      // Your primary dark blue
            secondary: '#34495e',    // Your secondary dark blue
            accent: '#f4a730',       // Your accent orange
            background: '#f8fafc',   // Light background
            chartColors: [
                '#597ea2',          // Lighter shade of primary
                '#f39c12',          // Complementary orange
                '#16a085',          // Teal for variety
                '#2c3e50',          // Primary
                '#8e44ad',          // Deep purple for contrast
                '#d35400',           // Deep orange
                '#f4a730',          // Accent
                '#34495e',          // Secondary
                '#7f8c8d',          // Neutral gray
                '#e67e22',          // Accent Secondary
            ]
        };
     

        function formatVND(value) {
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(value);
        }

        function loadKPIData() {
            fetch('/Dashboard_64132675/GetKPIData')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('totalRevenue').textContent = formatVND(data.TotalRevenue);
                    document.getElementById('occupancy').textContent =
                        `${Math.round((data.Occupancy.Booked / data.Occupancy.Total) * 100)}%`;
                    document.getElementById('topService').textContent = data.TopService?.Name || '-';
                    document.getElementById('currentGuests').textContent = data.CurrentGuests.toLocaleString('vi-VN');
                })
                .catch(error => console.error('Lỗi tải dữ liệu KPI:', error));
        }

        function initializeCharts() {
            const revenueCtx = document.getElementById('revenueByRoomChart').getContext('2d');
            window.revenueChart = new Chart(revenueCtx, {
                type: 'bar',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Doanh Thu',
                        backgroundColor: chartColors.chartColors,
                        borderRadius: 6,
                        data: []
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return formatVND(context.raw);
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function (value) {
                                    return formatVND(value);
                                }
                            }
                        }
                    }
                }
            });

            const sourcesCtx = document.getElementById('bookingSourcesChart').getContext('2d');
            window.sourcesChart = new Chart(sourcesCtx, {
                type: 'doughnut',
                data: {
                    labels: [],
                    datasets: [{
                        data: [],
                        backgroundColor: chartColors.chartColors,
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right',
                            labels: {
                                padding: 20,
                                usePointStyle: true
                            }
                        }
                    },
                    cutout: '70%'
                }
            });

            const occupancyCtx = document.getElementById('occupancyTrendChart').getContext('2d');
            const occupancyGradient = occupancyCtx.createLinearGradient(0, 0, 0, 400);
            occupancyGradient.addColorStop(0, 'rgba(52, 152, 219, 0.3)');
            occupancyGradient.addColorStop(1, 'rgba(52, 152, 219, 0.0)');

            window.occupancyChart = new Chart(occupancyCtx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Tỷ Lệ Lấp Đầy',
                        borderColor: '#3498db',
                        backgroundColor: occupancyGradient,
                        fill: true,
                        tension: 0.4,
                        borderWidth: 3,
                        pointRadius: 4,
                        pointBackgroundColor: '#fff',
                        pointBorderColor: '#3498db',
                        pointBorderWidth: 2,
                        data: []
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            ticks: {
                                callback: function (value) {
                                    return value + '%';
                                }
                            }
                        }
                    }
                }
            });

            const serviceCtx = document.getElementById('serviceRevenueChart').getContext('2d');
            window.serviceChart = new Chart(serviceCtx, {
                type: 'bar',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Doanh Thu',
                        backgroundColor: chartColors.chartColors,
                        borderRadius: 6,
                        data: []
                    }]
                },
                options: {
                    indexAxis: 'y',
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return formatVND(context.raw);
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            beginAtZero: true,
                            ticks: {
                                callback: function (value) {
                                    return formatVND(value);
                                }
                            }
                        }
                    }
                }
            });
        }

        function updateCharts() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            fetch(`/Dashboard_64132675/GetRevenueByRoomClass?startDate=${startDate}&endDate=${endDate}`)
                .then(response => response.json())
                .then(data => {
                    window.revenueChart.data.labels = data.labels;
                    window.revenueChart.data.datasets[0].data = data.data;
                    window.revenueChart.update();
                })
                .catch(error => console.error('Lỗi tải dữ liệu doanh thu:', error));

            fetch('/Dashboard_64132675/GetBookingSources')
                .then(response => response.json())
                .then(data => {
                    window.sourcesChart.data.labels = data.labels;
                    window.sourcesChart.data.datasets[0].data = data.data;
                    window.sourcesChart.update();
                })
                .catch(error => console.error('Lỗi tải dữ liệu nguồn đặt phòng:', error));

            fetch(`/Dashboard_64132675/GetOccupancyTrend?startDate=${startDate}&endDate=${endDate}`)
                .then(response => response.json())
                .then(data => {
                    window.occupancyChart.data.labels = data.labels;
                    window.occupancyChart.data.datasets[0].data = data.data;
                    window.occupancyChart.update();
                })
                .catch(error => console.error('Lỗi tải dữ liệu tỷ lệ lấp đầy:', error));

            fetch('/Dashboard_64132675/GetServiceRevenue')
                .then(response => response.json())
                .then(data => {
                    window.serviceChart.data.labels = data.labels;
                    window.serviceChart.data.datasets[0].data = data.data;
                    window.serviceChart.update();
                })
                .catch(error => console.error('Lỗi tải dữ liệu doanh thu dịch vụ:', error));
        }

        document.addEventListener('DOMContentLoaded', function () {
            const today = new Date();
            const monthAgo = new Date();
            monthAgo.setMonth(monthAgo.getMonth() - 1);

            document.getElementById('startDate').value = monthAgo.toISOString().split('T')[0];
            document.getElementById('endDate').value = today.toISOString().split('T')[0];

            loadKPIData();
            initializeCharts();

            ['startDate', 'endDate'].forEach(id => {
                document.getElementById(id).addEventListener('change', () => {
                    loadKPIData();
                    updateCharts();
                });
            });

            updateCharts();
        });
    </script>
}
